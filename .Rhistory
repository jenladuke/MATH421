my_linear_model <- lm(heart_disease ~ biking + smoking, data = d)
my_linear_model <- lm(heart_disease ~ biking + smoking, data = d)
my_linear_model <- lm(heart_disease ~ biking + smoking, data = d)
'https://bryantstats.github.io/math461/slides/heart_data.csv'
read.csv('https://bryantstats.github.io/math461/slides/heart_data.csv')
d = read.csv('https://bryantstats.github.io/math461/slides/heart_data.csv')
d = read.csv('https://bryantstats.github.io/math461/slides/heart_data.csv')
d = read.csv('https://bryantstats.github.io/math461/slides/heart_data.csv')
my_linear_model <- lm(heart_disease ~ biking, data = d)
summary(my_linear_model)
my_linear_model <- lm(heart_disease ~ biking + smoking, data = d)
summary(my_linear_model)
'https://bryantstats.github.io/math461/slides/heart_data.csv'
d = read.csv('https://bryantstats.github.io/math461/slides/heart_data.csv')
d = read.csv'https://bryantstats.github.io/math461/slides/heart_data.csv'
d = read.csv('https://bryantstats.github.io/math461/slides/heart_data.csv')
= read.csv('https://bryantstats.github.io/math461/slides/heart_data.csv')
read.csv('https://bryantstats.github.io/math461/slides/heart_data.csv')
d = read.csv('https://bryantstats.github.io/math461/slides/heart_data.csv')
d = read.csv('https://bryantstats.github.io//math461//slides//heart_data.csv')
d = read.csv('https://bryantstats.github.io//read.csv('https://bryantstats.github.io//math461//slides//heart_data.csv')
read.csv('https://bryantstats.github.io/math461/slides/heart_data.csv')
q()
d = read.csv('https://bryantstats.github.io/math461/assignments/HospitalCosts.csv')
read.csv('https://bryantstats.github.io/math461/assignments/HospitalCosts.csv')
lm(TOTCHG~AGE + LOS, data = d)
summary(model)
sum(8,9)
View(d)
d = read.csv('https://bryantstats.github.io/math461/assignments/HospitalCosts.csv')
d = read.csv('https://bryantstats.github.io/math461/assignments/HospitalCosts.csv')
model = lm(TOTCHG~AGE + LOS, data = d)
summary(model)
getwd()
View(d)
d = read.csv('https://bryantstats.github.io/math461/assignments/HospitalCosts.csv')
View(model)
View(d)
7read.csv
?read.csv
?what
d
predict(model, list(AGE = 13, LOS = 7))
model = lm(TOTCHG~AGE + LOS, data = d)
summary(model)
predict(model, list(AGE = 13, LOS = 7))
predict(model, list(AGE = 21, LOS = 14))
model = lm(TOTCHG~AGE + LOS, data = d)
summary(model)
full_model <- lm(TOTCHG~ LOS + factor(GENDER) + factor(RACE) + AGE + APRDRG, data = d)
reduced_model <- lm(TOTCHG~ LOS + factor(GENDER) + factor(RACE) , data = d)
anova(reduced_model, full_model)
full_model <- lm(TOTCHG~ LOS + factor(GENDER) + factor(RACE) + AGE + APRDRG, data = d)
reduced_model <- lm(TOTCHG~ LOS + factor(GENDER) + factor(RACE) , data = d)
anova(reduced_model, full_model)
full_model2<- 1m(TOTCH~., data = d)
full_model2<- 1m(TOTCHG~., data = d)
1/(1+exp^(-1.520+.031))
1/(1+e^(-1.520+.031))
1/(1+exp(-.05+.04*10+1*2+-1.2*780))
1/(1+exp^-1.530+.031)
1/(1+exp(-.05+.04*10+1*2+-1.2*.780))
d = read.csv('https://bryantstats.github.io/math461/assignments/HospitalCosts.csv')
# Calculate median charge
median_cost = median(d$TOTCHG)
# Create a column to compare the cost with median charge
# this column takes value 0 of the charge is less than the median and 1 otherwise
d$charge = ifelse(d$TOTCHG < median_cost, 0, 1)
View(model)
View(model)
View(d)
View(d)
# Train
model = glm(charge ~ AGE + LOS,
data = d,
family = binomial(link = "logit"))
# Report model summary
summary(model)
1/(1+exp(-.05+.04*10+1*2+-1.2*.780))
d = read.csv('https://bryantstats.github.io/math461/assignments/HospitalCosts.csv')
# Calculate median charge
median_cost = median(d$TOTCHG)
# Create a column to compare the cost with median charge
# this column takes value 0 of the charge is less than the median and 1 otherwise
d$charge = ifelse(d$TOTCHG < median_cost, 0, 1)
# Train
model = glm(charge ~ AGE + LOS,
data = d,
family = binomial(link = "logit"))
# Report model summary
summary(model)
predicted_prob = predict(model, list(AGE = 20, LOS = 1),
type = 'response')
predicted_prob
predicted_class = ifelse(predicted_prob>=.5, 1, 0)
predicted_class
predicted_class = ifelse(predicted_prob>=.5, 1, 0)
predicted_class
# Create
d$predicted_prob_charge = predict(model, d, type = "response")
d$predicted_charge = ifelse(d$predicted_prob_charge <.5, 0, 1)
mean(d$predicted_charge == d$charge)
d = read.csv('https://bryantstats.github.io/math461/assignments/HospitalCosts.csv')
median_cost = median(d$TOTCHG)
median_cost = median(d$TOTCHG)
d$charge = ifelse(d$TOTCHG < median_cost, 0, 1)
model = glm(charge ~ AGE + LOS,
data = d,
family = binomial(link = "logit"))
summary(model)
predicted_prob = predict(model, list(AGE = 20, LOS = 1),
type = 'response')
predicted_prob
predicted_class = ifelse(predicted_prob>=.5, 1, 0)
predicted_class
d$predicted_prob_charge = predict(model, d, type = "response")
d$predicted_charge = ifelse(d$predicted_prob_charge <.5, 0, 1)
mean(d$predicted_charge == d$charge)
d = read.csv('https://bryantstats.github.io/math461/assignments/HospitalCosts.csv')
# Calculate median charge
median_cost = median(d$TOTCHG)
# Create a column to compare the cost with median charge
# this column takes value 0 of the charge is less than the median and 1 otherwise
d$charge = ifelse(d$TOTCHG < median_cost, 0, 1)
d = read.csv('https://bryantstats.github.io/math461/assignments/HospitalCosts.csv')
# Calculate median charge
median_cost = median(d$TOTCHG)
# Create a column to compare the cost with median charge
# this column takes value 0 of the charge is less than the median and 1 otherwise
d$charge = ifelse(d$TOTCHG < median_cost, 0, 1)
e=exp()
e=exp(1)
e^-2.562
View(d)
median_cost = median(d$TOTCHG)
median_cost
d$charge = ifelse(d$TOTCHG < median_cost, 0, 1)
median_los = median(d$LOS)
d$mylos = ifelse(d$LOS < median_los, 0, 1)
d$LOS2 = ifelse(d$LOS < median_los2, 0, 1)
d$LOS2 = ifelse(d$LOS2 < median_los2, 0, 1)
d$LOS2 = ifelse(d$LOS < median_los, 0, 1)
# Train
model = glm(LOS2 ~ AGE + GENDER + RACE,
data = d,
family = binomial(link = "logit"))
# Report model summary
summary(model)
d$predicted_prob_LOS = predict(model, d, type = "response")
d$predicted_charge = ifelse(d$predicted_prob_charge <.5, 0, 1)
d$predicted_prob_LOS2 = predict(model, d, type = "response")
d$predicted_charge = ifelse(d$predicted_prob_charge <.5, 0, 1)
d$predicted_prob_LOS = predict(model, d, type = "response")
d$predicted_charge = ifelse(d$predicted_prob_charge <.5, 0, 1)
d$predicted_prob_LOS = predict(model, d, type = "response")
d$predicted_LOS = ifelse(d$predicted_prob_charge <.5, 0, 1)
d$predicted_prob_LOS2 = predict(model, d, type = "response")
d$predicted_LOS2 = ifelse(d$predicted_prob_LOS2 <.5, 0, 1)
mean(d$predicted_LOS == d$LOS2)
d$predicted_prob_LOS2 = predict(model, d, type = "response")
d$predicted_LOS2 = ifelse(d$predicted_prob_LOS2 <.5, 0, 1)
mean(d$predicted_LOS2 == d$LOS2)
d$predicted_LOS2
d$predicted_prob_LOS2 = predict(model, d, type = "response")
d$predicted_LOS2 = ifelse(d$predicted_prob_LOS2 <.5, 0, 1)
mean(d$predicted_LOS2 == d$LOS2, na.rm = TRUE)
mean(d$predicted_LOS2 == d$LOS2, na.rm = TRUE)
e=exp(1)
-15-1.2+(.15*25)+.012
e^-12.430
d = read.csv('poisson_sim2.csv')
library(tidyverse)  # data manipulation
df <- USArrests
df <- data.frame((scale(df)))
library(tidyverse)  # data manipulation
load("C:/Users/student/Downloads/Mall_Customers2.csv")
library(tidyverse)  # data manipulation
set.seed(123)
fviz_nbclust(df, kmeans, method = "wss")
load("C:/Users/student/Downloads/autos.csv")
df = read.csv('autos.csv')
load("C:/Users/student/Downloads/autos.csv")
df = read.csv('autos.csv')
setwd("C:/Users/student/Downloads")
df = read.csv('autos.csv')
df = df[, c("num_of_doors", "wheel_base", "length", "width", "height")]
df[, c("num_of_doors", "wheel_base", "length", "width", "height")]
read.csv('autos.csv')
<- na.omit(df)
na.omit(df)
data.frame((scale(df)))
setwd("C:/Users/student/Downloads")
load("C:/Users/student/Downloads/heart_data.csv")
load("C:/Users/student/Downloads/autos.csv")
setwd("C:/Users/student/Downloads/")
load("C:/Users/student/Downloads/heart_data.csv")
load("C:/Users/student/Downloads/autos.csv")
setwd("C:/Users/student/Downloads/autos.csv")
load("C:/Users/student/Downloads/autos.csv")
load("C:/Users/student/Downloads/Mall_Customers2 (1).csv")
fviz_nbclust(df, kmeans, method = "wss")
load("C:/Users/student/Downloads/Mall_Customers2 (3).csv")
read.csv('autos.csv')
df[, c("num_of_doors", "wheel_base", "length", "width", "height")]
load("C:/Users/student/Downloads/autos (2).csv")
load("C:/Users/student/Downloads/autos (2).csv")
setwd("C:/Users/student/Downloads")
df = read.csv("autos.csv")
df = df[, c("num_of_doors", "wheel_base", "length", "width", "height")]
df <- na.omit(df)
df <- data.frame((scale(df)))
cviz_nbclust(df, kmeans, method = "wss")
fcviz_nbclust(df, kmeans, method = "wss")
library(tidyverse)  # data manipulation
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
library(factoextra)
install.packages("factoextra")
library(factoextra)
library(tidyverse)
df <- USArrests
df <- na.omit(df)
df <- data.frame((scale(df)))
set.seed(123)
fviz_nbclust(df, kmeans, method = "wss")
k <- kmeans(df, centers = 4)
df1 = df
df1$cluster = factor(k$cluster)
head(df1)
df1 = as_tibble(df1, rownames = NA) %>%
rownames_to_column()
df1 %>% ggplot(aes(x = Murder, y = UrbanPop, color = cluster))+geom_point()+
ggrepel::geom_text_repel(aes(label = rowname))
df1 %>% ggplot(aes(x = Murder, y = Assault, color = cluster))+geom_point()+
ggrepel::geom_text_repel(aes(label = rowname))
df1 %>% ggplot(aes(x = Murder, y = Rape, color = cluster))+geom_point()+
ggrepel::geom_text_repel(aes(label = rowname))
fviz_cluster(k, data = df)
k$centers
read.csv(Mall_Customers2.csv)
df=read.csv(Mall_Customers2.csv)
df = read.csv(Mall_Customers2.csv)
df = read.csv(Mall_Customers2.csv)
setwd("C:/Users/student/Downloads")
library(readr)
Mall_Customers2 <- read_csv("Mall_Customers2.csv")
View(Mall_Customers2)
load()
read.csv(Mall_Customers2.csv)
df = read.csv(Mall_Customers2.csv)
df = read.csv('mall_customers2.csv')
df <- USArrests
df <- na.omit(df)
df <- data.frame((scale(df)))
df = read.csv('mall_customers2.csv')
set.seed(123)
fviz_nbclust(df, kmeans, method = "wss")
df1 = as_tibble(df1, rownames = NA) %>%
rownames_to_column()
df1 = as_tibble(df1, rownames = NA) %>%
rownames_to_column(age)
df1 = as_tibble(df1, rownames = NA) %>%
rownames_to_column()
rlang::last_trace()
k <- kmeans(df, centers = 6)
df1 = df
df1$cluster = factor(k$cluster)
head(df1)
df1 = as_tibble(df1, rownames = NA) %>%
rownames_to_column()
df1 %>% ggplot(aes(x = Age, y = Annual_Income, color = cluster))+geom_point()+
ggrepel::geom_text_repel(aes(label = rowname))
df1 %>% ggplot(aes(x = Age, y = Annual_Income, color = cluster))+geom_point()+
ggrepel::geom_text_repel(aes(label = rowname))
fviz_cluster(k, data = df)
k$centers
df1 = as_tibble(df1, rownames = NA) %>%
+     rownames_to_column() df1 %>% ggplot(aes(x = Age, y = Annual_Income, color = cluster))+geom_point()+
library(tidyverse)
library(factoextra)
df <- USArrests
df <- na.omit(df)
df <- data.frame((scale(df)))
set.seed(123)
fviz_nbclust(df, kmeans, method = "wss")
k <- kmeans(df, centers = 4)
df1 = df
df1$cluster = factor(k$cluster)
head(df1)
set.seed(123)
fviz_nbclust(df, kmeans, method = "wss")
df = read.csv('Mall_Customers2.csv')
df = read.csv('Mall_Customers2.csv')
set.seed(123)
fviz_nbclust(df, kmeans, method = "wss")
k <- kmeans(df, centers = 2)
df1 = df
df1$cluster = factor(k$cluster)
head(df1)
load("C:/Users/student/Downloads/job_placement.csv")
load("C:/Users/student/Downloads/job_placement.csv")
load("C:/Users/student/Downloads/job_placement.csv")
load("C:/Users/student/Downloads/job_placement.csv")
load("C:/Users/student/Downloads/job_placement (2).xlsx")
dfm = read.csv('job_placement (2).xlsx')
df = read.csv('job_placement (2).xlsx')
df = read.csv('job_placement (2).csv')
set.seed(123)
fviz_nbclust(df, kmeans, method = "wss")
set.seed(123)
fviz_nbclust(df, kmeans, method = "wss")
set.seed(123)
fviz_nbclust(df, kmeans, method = "wss")
k <- kmeans(df, centers = 4)
df <- USArrests
df <- na.omit(df)
df <- data.frame((scale(df)))
set.seed(123)
fviz_nbclust(df, kmeans, method = "wss")
df = read.csv('job_placement (2).csv')
set.seed(123)
fviz_nbclust(df, kmeans, method = "wss")
df = read.csv('job_placement (2).csv')
df <- USArrests
df <- na.omit(df)
df <- data.frame((scale(df)))
set.seed(123)
fviz_nbclust(df, kmeans, method = "wss")
e^-2.562
e^-12.43
3.997
df = read.csv('poisson_sim2.csv')
d = read.csv('poisson_sim2.csv')
model = glm(num_awards ~ prog + math,
data = d,
family = poisson(link = "log"))
summary(model)
predict(model,
list(math = 70, prog = "Vocational"),
type = 'response')
# Goodness-of-fit test
gof.pvalue = 1 - pchisq(model$deviance, model$df.residual)
gof.pvalue
d = read.csv('poisson_sim2.csv')
model = glm(num_awards ~ prog + math,
data = d,
family = poisson(link = "log"))
summary(model)
predict(model,
list(math = 70, prog = "Vocational"),
type = 'response')
# Goodness-of-fit test
gof.pvalue = 1 - pchisq(model$deviance, model$df.residual)
gof.pvalue
load("C:/Users/student/Downloads/poisson_sim2.csv")
glm(formula = num_awards ~ prog + math, family = "poisson", data = p)
=-2.63+(.15*25)-1.42
-2.63+(.15*25)-1.42
e^(-.3)
library(ggplot2)
install.packages("ggplot2")
View(df)
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(lubridate)
df = read.csv('https://bryantstats.github.io/math421/data/titanic.csv')
str(df)
library(tidyverse)
library(lubridate)
df = read.csv('https://bryantstats.github.io/math421/data/titanic.csv')
# change survived to categorical
df$Survived = as.character(df$Survived)
df$Pclass = as.character(df$Pclass)
df = df %>%
mutate(Survived = as.character(Survived),
Pclass = as.character(Pclass))
ggplot(df) +
geom_bar(mapping = aes(x = Survived))
df %>%
ggplot()+
geom_bar(mapping = aes(y = Survived))
library(readxl)
install.packages('readxl')
library(readxl)
knitr::opts_chunk$set(message = FALSE)
library(readxl)
df = read_excel("c2015.xlsx")
setwd("C:/Users/student/Downloads/MATH421")
df = read_excel("c2015.xlsx")
df = read_excel('c2015.xlsx')
df = read_excel('c2015.xlsx')
setwd("~/GitHub/MATH421")
setwd("~/GitHub/MATH421")
df = read_excel('c2015.xlsx')
library(readxl)
setwd("~/GitHub/MATH421")
df = read_excel('c2015.xlsx')
df %>% summarise(AGE, na.rm=TRUE)
df %>%
summarise(AGE, na.rm=TRUE)
df %>% summarise(AGE, na.rm=TRUE)
colSums(is.na(df))
colSums(AGE = is.na(df))
library(tidyverse)
setwd("~/GitHub/MATH421")
df = read_excel('c2015.xlsx')
