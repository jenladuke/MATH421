pull(Country)
df2 %>%
filter(Country %in% top_10_countries)
anim <- ggplot(top_10_data, aes(x = reorder(Country, -total_deaths), y = total_deaths, fill = Country)) +
geom_bar(stat = "identity") +
labs(title = 'Top 10 Countries by COVID-19 Deaths: {frame_time}', x = 'Country', y = 'Total Deaths') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
transition_time(month) +  # Transition by month
ease_aes('linear')
filter(!is.na(total_deaths) & !is.na(month))
library(dplyr)
library(ggplot2)
library(gganimate)
library(lubridate)
df2 = read_csv("WHO-COVID-19-global-data.csv")
df2 %>%
filter(year(Date_reported) == 2021) %>%
group_by(Country, month = floor_date(Date_reported, "month")) %>%
summarise(total_deaths = sum(New_deaths, na.rm = TRUE), .groups = 'drop')
df2 %>%
group_by(Country) %>%
summarise(total_deaths = sum(Cumulative_deaths), .groups = 'drop') %>%
slice_max(total_deaths, n = 10) %>%
pull(Country)
df2 %>%
filter(Country %in% top_10_countries)
anim <- ggplot(top_10_data, aes(x = reorder(Country, -total_deaths), y = total_deaths, fill = Country)) +
geom_bar(stat = "identity") +
labs(title = 'Top 10 Countries by COVID-19 Deaths: {frame_time}', x = 'Country', y = 'Total Deaths') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
transition_time(month) +  # Transition by month
ease_aes('linear')
filter(!is.na(Cumulative_deaths) & !is.na(month))
library(dplyr)
library(ggplot2)
library(gganimate)
library(lubridate)
df2 = read_csv("WHO-COVID-19-global-data.csv")
df2 %>%
filter(year(Date_reported) == 2021) %>%
group_by(Country, month = floor_date(Date_reported, "month")) %>%
summarise(total_deaths = sum(New_deaths, na.rm = TRUE), .groups = 'drop')
df2 %>%
group_by(Country) %>%
summarise(total_deaths = sum(Cumulative_deaths), .groups = 'drop') %>%
slice_max(total_deaths, n = 10) %>%
pull(Country)
df2 %>%
filter(Country %in% top_10_countries)
anim <- ggplot(top_10_data, aes(x = reorder(Country, -total_deaths), y = total_deaths, fill = Country)) +
geom_bar(stat = "identity") +
labs(title = 'Top 10 Countries by COVID-19 Deaths: {frame_time}', x = 'Country', y = 'Total Deaths') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
transition_time(month) +
ease_aes('linear') +
filter(!is.na(Cumulative_deaths) & !is.na(month))
library(dplyr)
library(ggplot2)
library(gganimate)
library(lubridate)
df2 = read_csv("WHO-COVID-19-global-data.csv")
df2 %>%
filter(year(Date_reported) == 2021) %>%
group_by(Country, month = floor_date(Date_reported, "month")) %>%
summarise(total_deaths = sum(New_deaths, na.rm = TRUE), .groups = 'drop')
df2 %>%
group_by(Country) %>%
summarise(total_deaths = sum(Cumulative_deaths), .groups = 'drop') %>%
slice_max(total_deaths, n = 10) %>%
pull(Country)
df2 %>%
filter(Country %in% top_10_countries)
anim <- ggplot(top_10_data, aes(x = reorder(Country, -total_deaths), y = total_deaths, fill = Country)) +
geom_bar(stat = "identity") +
labs(title = 'Top 10 Countries by COVID-19 Deaths: {frame_time}', x = 'Country', y = 'Total Deaths') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
transition_time(month) +
ease_aes('linear') +
replace(df2, df2 %in% c("Unknown", "Missing", "Not Available"), NA)
library(dplyr)
library(ggplot2)
library(gganimate)
library(lubridate)
df2 = read_csv("WHO-COVID-19-global-data.csv")
df2 %>%
filter(year(Date_reported) == 2021) %>%
group_by(Country, month = floor_date(Date_reported, "month")) %>%
summarise(total_deaths = sum(New_deaths, na.rm = TRUE), .groups = 'drop')
df2 %>%
group_by(Country) %>%
summarise(total_deaths = sum(Cumulative_deaths), .groups = 'drop') %>%
slice_max(total_deaths, n = 10) %>%
pull(Country)
df2 %>%
filter(Country %in% top_10_countries)
anim <- ggplot(top_10_data, aes(x = reorder(Country, -Cumulative_deaths), y = Cumulative_deaths, fill = Country)) +
geom_bar(stat = "identity") +
labs(title = 'Top 10 Countries by COVID-19 Deaths: {frame_time}', x = 'Country', y = 'Total Deaths') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
transition_time(month) +
ease_aes('linear') +
replace(df2, df2 %in% c("Unknown", "Missing", "Not Available"), NA)
str(df2)
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(gganimate)
library(lubridate)
library(readr)
# Load the WHO COVID-19 dataset
df2 <- read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv")
# Convert Date_reported to a proper date format
df2$Date_reported <- as.Date(df2$Date_reported)
# Filter for data from 2021 and ensure no NA in deaths
df2 <- df2 %>%
filter(year(Date_reported) == 2021, !is.na(New_deaths), New_deaths > 0)
# Create a month variable
df2$month <- floor_date(df2$Date_reported, "month")
# Summarize cumulative deaths by month for each country
monthly_deaths <- df2 %>%
group_by(month, Country) %>%
summarise(total_deaths = sum(New_deaths, na.rm = TRUE), .groups = 'drop')
# Get the rank of countries by total deaths per month
ranked_deaths <- monthly_deaths %>%
group_by(month) %>%
mutate(rank = rank(-total_deaths)) %>%
filter(rank <= 10)
# Create the bar race animation
a1 <- ggplot(ranked_deaths, aes(x = rank, y = total_deaths, fill = Country, label = Country)) +
geom_col() +
geom_text(aes(y = total_deaths, label = Country), hjust = 1.4) +
coord_flip(clip = "off", expand = FALSE) +
scale_x_reverse() +
labs(title = 'Top 10 Countries by COVID-19 Deaths: Month {closest_state}', x = '', y = 'Total Deaths', fill = 'Country') +
theme(plot.title = element_text(hjust = 0.5, size = 22),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
transition_states(month, transition_length = 2, state_length = 1) +
ease_aes("cubic-in-out")
# Render the animation
animate(a1, nframes = 400)
# Save the animation
anim_save("top10_covid_deaths_2021.gif", animation = a1)
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(readr)
library(lubridate)
# Load the WHO COVID-19 dataset
df2 <- read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv")
# Convert Date_reported to a proper date format
df2$Date_reported <- as.Date(df2$Date_reported)
# Filter for data from 2022 and ensure no NA in New_deaths
df2_2022 <- df2 %>%
filter(year(Date_reported) == 2022, !is.na(New_deaths), New_deaths > 0)
# Summarize New_deaths by country
new_deaths_by_country <- df2_2022 %>%
group_by(Country) %>%
summarise(total_new_deaths = sum(New_deaths, na.rm = TRUE), .groups = 'drop') %>%
arrange(desc(total_new_deaths))
# Create the bar graph
ggplot(new_deaths_by_country, aes(x = reorder(Country, -total_new_deaths), y = total_new_deaths, fill = Country)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip coordinates for better readability
labs(title = 'Total New COVID-19 Deaths by Country in 2022',
x = 'Country',
y = 'Total New Deaths') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 22)) +
scale_fill_viridis_d()  # Optional: add a color scale
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(gganimate)
library(lubridate)
library(readr)
# Load the WHO COVID-19 dataset
df2 <- read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv")
# Convert Date_reported to a proper date format
df2$Date_reported <- as.Date(df2$Date_reported)
# Filter for data from 2022 and ensure no NA in New_cases
df2_2022 <- df2 %>%
filter(year(Date_reported) == 2022, !is.na(New_cases), New_cases > 0)
# Create a month variable
df2_2022$month <- floor_date(df2_2022$Date_reported, "month")
# Summarize New_cases by month and country
monthly_new_cases <- df2_2022 %>%
group_by(month, Country) %>%
summarise(total_new_cases = sum(New_cases, na.rm = TRUE), .groups = 'drop')
# Get the rank of countries by new cases per month
ranked_new_cases <- monthly_new_cases %>%
group_by(month) %>%
mutate(rank = rank(-total_new_cases)) %>%
filter(rank <= 5)
# Create the bar race animation
bar_race <- ggplot(ranked_new_cases, aes(x = reorder(Country, -total_new_cases), y = total_new_cases, fill = Country)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = 'Top 5 Countries by New COVID-19 Cases: Month {closest_state}',
x = 'Country',
y = 'Total New Cases') +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 22),
axis.ticks.y = element_blank()) +
transition_states(month, transition_length = 2, state_length = 1) +
ease_aes("cubic-in-out")
# Render the animation
animate(bar_race, nframes = 400)
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(gganimate)
library(lubridate)
library(readr)
# Load the WHO COVID-19 dataset
df2 <- read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv")
# Convert Date_reported to a proper date format
df2$Date_reported <- as.Date(df2$Date_reported)
# Filter for data from 2022 and ensure no NA in New_cases
df2_2022 <- df2 %>%
filter(year(Date_reported) == 2022, !is.na(New_cases), New_cases > 0)
# Create a month variable
df2_2022$month <- floor_date(df2_2022$Date_reported, "month")
# Summarize New_cases by month and country
d1 <- df2_2022 %>%
group_by(month, Country) %>%
summarise(total_new_cases = sum(New_cases, na.rm = TRUE), .groups = 'drop')
# Get the rank of countries by new cases per month
d2 <- d1 %>%
group_by(month) %>%
mutate(rank = rank(-total_new_cases))
# Filter for top 5 countries
d3 <- d2 %>%
filter(rank <= 5)
# Create the bar race animation
a1 <- d3 %>%
ggplot(aes(x = rank, y = total_new_cases, group = Country, fill = Country, label = Country)) +
geom_col() +
geom_text(aes(y = total_new_cases, label = Country), hjust = 1.4) +
coord_flip(clip = "off", expand = FALSE) +
scale_x_reverse() +
labs(title = 'Top 5 Countries by New COVID-19 Cases: Month {closest_state}',
x = '',
y = 'Total New Cases',
fill = 'Country') +
theme(plot.title = element_text(hjust = 0.5, size = 22),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
transition_states(month, transition_length = 2, state_length = 1) +
ease_aes("cubic-in-out")
# Render the animation
animate(a1, nframes = 400)
# Save the animation
anim_save("top5_new_cases_2022.gif", animation = a1)
knitr::opts_chunk$set(message = FALSE)
library(gganimate)
library(ggplot2)
library(tidyverse)
library(lubridate)
df = read_csv('WHO-COVID-19-global-data.csv')
library(gganimate)
library(ggplot2)
library(tidyverse)
library(lubridate)
df = read_csv('WHO-COVID-19-global-data.csv')
str(df)
view(df)
df
library(gganimate)
library(ggplot2)
library(tidyverse)
library(lubridate)
df = read_csv('WHO-COVID-19-global-data.csv')
df %>%
filter(Date_reported == max(Date_reported) )
library(gganimate)
library(ggplot2)
library(tidyverse)
library(lubridate)
df = read_csv('WHO-COVID-19-global-data.csv')
df %>%
filter(Date_reported == max(Date_reported) +
arrange(-Cumulative_deaths))
library(gganimate)
library(ggplot2)
library(tidyverse)
library(lubridate)
df = read_csv('WHO-COVID-19-global-data.csv')
df %>%
filter(Date_reported == max(Date_reported) %>%
arrange(-Cumulative_deaths))
df %>%
filter(Date_reported == max(Date_reported)
library(gganimate)
df %>%
filter(Date_reported == max(Date_reported)) %>%
arrange(-Cumulative_deaths)
df %>%
filter(Country %in% c('US','BR','IN')) %>%
ggplot(aes(y=positive,
x=Date_reported,
color=Country))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = positive),
hjust = -.1, size=5) +
transition_reveal(date)
df %>%
filter(Country %in% c('US','BR','IN')) %>%
ggplot(aes(y=positive,
x=Date_reported,
color=Country))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = positive),
hjust = -.1, size=5) +
transition_reveal(Date_reported)
df %>%
filter(Country_code %in% c('US','BR','IN')) %>%
ggplot(aes(y=positive,
x=Date_reported,
color=Country_code))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = positive),
hjust = -.1, size=5) +
transition_reveal(Date_reported)
df %>%
filter(Country_code %in% c('US','BR','IN')) %>%
ggplot(aes(y=positive,
x=Date_reported,
color=Country_code))+
geom_line()+
geom_point(size=4)+
geom_text(aes(label = positive),
hjust = -.1, size=5) +
transition_reveal(Date_reported)
df %>%
filter(Country_code %in% c('US','BR','IN')) %>%
ggplot(aes(y=positive,
x=Date_reported,
color=Country_code))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = positive),
hjust = -.1, size=5) +
transition_reveal(Date_reported))
df %>%
filter(Country_code %in% c('US','BR','IN')) %>%
ggplot(aes(y=positive,
x=Date_reported,
color=Country_code))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = positive),
hjust = -.1, size=5) +
transition_reveal(Date_reported)
library(gganimate)
library(ggplot2)
library(tidyverse)
library(lubridate)
df = read_csv('WHO-COVID-19-global-data.csv')
df %>%
filter(Date_reported == max(Date_reported)) %>%
arrange(-Cumulative_deaths)
df %>%
filter(Country_code %in% c('US','BR','IN')) %>%
ggplot(aes(y=positive,
x=Date_reported,
color=Country_code))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = positive),
hjust = -.1, size=5) +
transition_reveal(Date_reported)
df %>%
filter(Country_code %in% c('US','BR','IN')) %>%
ggplot(aes(y=Cumulative_deaths,
x=Date_reported,
color=Country_code))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = Cumulative_deaths),
hjust = -.1, size=5) +
transition_reveal(Date_reported)
df %>%
mutate(death_per_cases = Cumulative_deaths/Cumulative_cases)
df
view(df)
df %>%
mutate(death_per_cases = Cumulative_deaths/Cumulative_cases)
df2 = df %>%
mutate(death_per_cases = Cumulative_deaths/Cumulative_cases)
view(df2)
df2 = df %>%
mutate(death_per_cases = Cumulative_cases/Cumulative_deaths)
view(df2)
df2 = df %>%
mutate(death_per_cases = Cumulative_deaths/Cumulative_cases)
view(df2)
df2 = df %>%
mutate(death_per_cases = Cumulative_deaths/Cumulative_cases) %>%
arrange(death_per_cases)
view(df2)
df2 = df %>%
mutate(death_per_cases = Cumulative_deaths/Cumulative_cases) %>%
arrange(death_per_cases)
df2 = df %>%
mutate(death_per_cases = Cumulative_deaths/Cumulative_cases) %>%
arrange(-death_per_cases)
df2 = df %>%
mutate(death_per_cases = Cumulative_deaths/Cumulative_cases) %>%
arrange(death_per_cases)
df2 = df %>%
mutate(death_per_cases = Cumulative_deaths/Cumulative_cases) %>%
arrange(death_per_cases)
df2
df2 = df %>%
mutate(death_per_cases = Cumulative_deaths/Cumulative_cases) %>%
arrange(-death_per_cases)
df2
1/0
df2 = df %>%
filter(Cumulative_cases > 0) %>%
mutate(death_per_cases = Cumulative_deaths/Cumulative_cases) %>%
arrange(-death_per_cases)
df2
view(df$Country)
df2 %>%
filter(Country %in% c('United States of America','Italy', 'Mexico')) %>%
ggplot(aes(y=death_per_cases,
x=date,
color=state))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = death_per_cases),
hjust = -.1, size=5) +
transition_reveal(Date_reported)
df2 %>%
filter(Country %in% c('United States of America','Italy', 'Mexico')) %>%
ggplot(aes(y=death_per_cases,
x=date,
color=Country))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = death_per_cases),
hjust = -.1, size=5) +
transition_reveal(Date_reported)
df2 %>%
filter(Country %in% c('United States of America','Italy', 'Mexico')) %>%
ggplot(aes(y=death_per_cases,
x=Date_reported,
color=Country))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = death_per_cases),
hjust = -.1, size=5) +
transition_reveal(Date_reported)
df3 = read_csv('vaccinations.csv')
setwd("~/GitHub/MATH421")
df3 = read_csv('vaccinations.csv')
setwd("~/GitHub/MATH421")
df3 = read_csv('vaccinations.csv')
df3 = read_csv('vaccinations.csv')
setwd("~/GitHub/MATH421")
df3 = read_csv('vaccinations.csv')
view(df3)
table(df3$location)
setwd("~/GitHub/MATH421")
df3 = read_csv('vaccinations.csv')
df3 %>%
filter(location %in% c('Low income', 'Lower middle income', 'Upper middle income')) %>%
ggplot(aes(y=total_vaccinations_per_hundred,
x=date,
color=location))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = total_boosters_per_hundred),
hjust = -.1, size=5) +
transition_reveal(date)
setwd("~/GitHub/MATH421")
df3 = read_csv('vaccinations.csv')
df3 %>%
filter(location %in% c('Low income', 'Lower middle income', 'Upper middle income')) %>%
ggplot(aes(y=total_vaccinations_per_hundred,
x=date,
color=location))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = total_boosters_per_hundred),
hjust = -.1, size=5) +
transition_reveal(date) +
labs(caption = Upper middle income is increasing at a faster rate than the other income levels)
setwd("~/GitHub/MATH421")
df3 = read_csv('vaccinations.csv')
df3 %>%
filter(location %in% c('Low income', 'Lower middle income', 'Upper middle income')) %>%
ggplot(aes(y=total_vaccinations_per_hundred,
x=date,
color=location))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = total_boosters_per_hundred),
hjust = -.1, size=5) +
transition_reveal(date) +
labs(caption = 'Upper middle income is increasing at a faster rate than the other income levels')
